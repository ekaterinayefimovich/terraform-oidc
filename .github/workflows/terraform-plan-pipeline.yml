name: Terraform CI

# Controls when the workflow will run
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  id-token: write
  contents: read
  issues: write

env:
  TF_ROOT: .
  ROLE_ARN: ${{ secrets.ROLE_ARN }}
  REGION: ${{ secrets.REGION }}

jobs:
  plan:
    name: Terraform Plan
    environment: infrastructure
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ekaterinayefimovich/terraform-oidc:terraform-ci-1.2

    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}
        
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.REGION }}
          role-to-assume: ${{ env.ROLE_ARN }}

      - name: Terraform Init
        id: init
        run: terraform init -reconfigure

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate && echo "âˆš" || exit 1

      - name: Terraform Format Check
        id: fmt
        run: |
          if [[ -n "$(terraform fmt -write=false)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; 
          exit 1; 
          fi
    
      - name: Run tflint
        run: tflint

      - name: Terraform Plan
        run: terraform plan -out=${{ env.TF_ROOT }}/tfplan.cache
        
      - name: Upload plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-artifacts
          path: |
            ${{ env.TF_ROOT }}/tfplan.cache
            ${{ env.TF_ROOT }}/.terraform.lock.hcl
            ${{ env.TF_ROOT }}/.terraform/**
          retention-days: 3
          
  apply:
    name: Terraform Apply
    environment: infrastructure
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/ekaterinayefimovich/terraform-oidc:terraform-ci-1.2

    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.REGION }}
          role-to-assume: ${{ env.ROLE_ARN }}

      - name: Download terraform artifacts
        uses: actions/download-artifact@v4
        with:
          name: terraform-artifacts
          path: ${{ env.TF_ROOT }}

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan.cache

    
